{"ast":null,"code":"import _classCallCheck from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sakshya/Desktop/Todo Redux 2/src/Components/Todos.js\";\nimport React, { Component } from \"react\";\nimport store from \"../Reducers\";\nimport { deleteTodo, checkTodo, editTodo } from \"../Actions/actions\";\n\nvar Todo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Todo, _Component);\n\n  function Todo() {\n    _classCallCheck(this, Todo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Todo).apply(this, arguments));\n  }\n\n  _createClass(Todo, [{\n    key: \"render\",\n    value: function render() {\n      var filteredState = {\n        filter: \"\",\n        todoArray: []\n      };\n\n      if (this.props.filter === \"SHOW_ACTIVE\") {\n        filteredState.todoArray = this.props.tasks.filter(function (item) {\n          return !item.iscompleted;\n        });\n      }\n\n      if (this.props.filter === \"SHOW_COMPLETED\") {\n        filteredState.todoArray = this.props.todoArray.filter(function (state) {\n          return state.iscompleted;\n        });\n      }\n\n      if (this.props.filter === \"SHOW_ALL\" || this.props.filter === \"\") {\n        filteredState.todoArray = this.props.todoArray;\n      }\n\n      var todos = filteredState.todoArray;\n      var TodoList = todos.length ? todos.map(function (todo, i) {\n        return React.createElement(\"div\", {\n          className: \"todolist\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, todo.iscompleted ? React.createElement(\"input\", {\n          className: \"status\",\n          onClick: function onClick() {\n            store.dispatch(checkTodo(i));\n          },\n          checked: true,\n          type: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }) : React.createElement(\"input\", {\n          className: \"status\",\n          type: \"checkbox\",\n          onClick: function onClick() {\n            store.dispatch(checkTodo(i));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        })), todo.iscompleted ? React.createElement(\"input\", {\n          className: \"listitem strike\",\n          value: todo.todocaption,\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }) : React.createElement(\"input\", {\n          className: \"listitem\",\n          value: todo.todocaption,\n          onChange: function onChange(e) {\n            store.dispatch(editTodo(i, e.target.value));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"cross\",\n          onClick: function onClick() {\n            store.dispatch(deleteTodo(i));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"X\"));\n      }) : React.createElement(\"p\", {\n        className: \"listitem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"NO Left TODO\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, TodoList);\n    }\n  }]);\n\n  return Todo;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: state.todoArray,\n    filter: state.filter\n  };\n};\n\nvar Todos = connect(mapStateToProps)(Todo);\nexport default Todos;","map":{"version":3,"sources":["/Users/sakshya/Desktop/Todo Redux 2/src/Components/Todos.js"],"names":["React","Component","store","deleteTodo","checkTodo","editTodo","Todo","filteredState","filter","todoArray","props","tasks","item","iscompleted","state","todos","TodoList","length","map","todo","i","dispatch","todocaption","e","target","value","mapStateToProps","Todos","connect"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport store from \"../Reducers\";\nimport { deleteTodo, checkTodo, editTodo } from \"../Actions/actions\";\n\nclass Todo extends Component {\n  render() {\n    let filteredState = { filter: \"\", todoArray: [] };\n\n    if (this.props.filter === \"SHOW_ACTIVE\") {\n      filteredState.todoArray = this.props.tasks.filter(\n        item => !item.iscompleted\n      );\n    }\n\n    if (this.props.filter === \"SHOW_COMPLETED\") {\n      filteredState.todoArray = this.props.todoArray.filter(\n        state => state.iscompleted\n      );\n    }\n\n    if (this.props.filter === \"SHOW_ALL\" || this.props.filter === \"\") {\n      filteredState.todoArray = this.props.todoArray;\n    }\n\n    const todos = filteredState.todoArray;\n\n    const TodoList = todos.length ? (\n      todos.map((todo, i) => {\n        return (\n          <div className=\"todolist\" key={i}>\n            <span>\n              {todo.iscompleted ? (\n                <input\n                  className=\"status\"\n                  onClick={() => {\n                    store.dispatch(checkTodo(i));\n                  }}\n                  checked={true}\n                  type=\"checkbox\"\n                />\n              ) : (\n                <input\n                  className=\"status\"\n                  type=\"checkbox\"\n                  onClick={() => {\n                    store.dispatch(checkTodo(i));\n                  }}\n                />\n              )}\n            </span>\n            {todo.iscompleted ? (\n              <input\n                className=\"listitem strike\"\n                value={todo.todocaption}\n                disabled\n              />\n            ) : (\n              <input\n                className=\"listitem\"\n                value={todo.todocaption}\n                onChange={e => {\n                  store.dispatch(editTodo(i, e.target.value));\n                }}\n              />\n            )}\n            <span\n              className=\"cross\"\n              onClick={() => {\n                store.dispatch(deleteTodo(i));\n              }}\n            >\n              X\n            </span>\n          </div>\n        );\n      })\n    ) : (\n      <p className=\"listitem\">NO Left TODO</p>\n    );\n    return <div>{TodoList}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.todoArray,\n    filter: state.filter\n  };\n};\n\nconst Todos = connect(mapStateToProps)(Todo);\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}