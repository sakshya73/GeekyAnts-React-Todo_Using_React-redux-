{"ast":null,"code":"import _classCallCheck from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sakshya/Desktop/Todo Redux 2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sakshya/Desktop/Todo Redux 2/src/Components/Form.js\";\nimport React, { Component } from \"react\"; // import store from \"../Reducers\";\n\nimport { addTodo } from \"../Actions/actions\";\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault(); // store.dispatch(addTodo(e.target[0].value));\n\n      _this.props.addTodoItem(e.target.value);\n\n      e.target[0].value = \"\";\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"What needs to be added?\",\n        className: \"task\",\n        type: \"text\",\n        id: \"todocaption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submitbutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(Dispatch) {\n  return {\n    addTodoItem: function addTodoItem() {\n      return dispatch(addTodo());\n    }\n  };\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/sakshya/Desktop/Todo Redux 2/src/Components/Form.js"],"names":["React","Component","addTodo","Form","handleSubmit","e","preventDefault","props","addTodoItem","target","value","mapDispatchToProps","Dispatch","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;;IAEMC,I;;;;;;;;;;;;;;;;;;UAEJC,Y,GAAe,UAAAC,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF,GADkB,CAElB;;AACA,YAAKC,KAAL,CAAWC,WAAX,CAAuBH,CAAC,CAACI,MAAF,CAASC,KAAhC;;AACAL,MAAAA,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYC,KAAZ,GAAoB,EAApB;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAC,yBADd;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,EAAE,EAAC,aAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADF,CADF;AAaD;;;;EAvBgBH,S;;AA0BnB,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAG;AACpCJ,IAAAA,WAAW,EAAE;AAAA,aAAKK,QAAQ,CAACX,OAAO,EAAR,CAAb;AAAA;AADuB,GAAH;AAAA,CAAnC;;AAIA,eAAeC,IAAf","sourcesContent":["import React, { Component } from \"react\";\n// import store from \"../Reducers\";\nimport { addTodo } from \"../Actions/actions\";\n\nclass Form extends Component {\n  \n  handleSubmit = e => {\n    e.preventDefault();\n    // store.dispatch(addTodo(e.target[0].value));\n    this.props.addTodoItem(e.target.value);\n    e.target[0].value = \"\";\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            placeholder=\"What needs to be added?\"\n            className=\"task\"\n            type=\"text\"\n            id=\"todocaption\"\n          />\n          <button className=\"submitbutton\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = Dispatch=>({\n  addTodoItem: ()=> dispatch(addTodo())\n})\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}