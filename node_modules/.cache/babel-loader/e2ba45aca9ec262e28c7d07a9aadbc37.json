{"ast":null,"code":"import _toConsumableArray from \"/Users/sakshya/Desktop/Todo Redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sakshya/Desktop/Todo Redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sakshya/Desktop/Todo Redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nvar initState = {\n  todos: [],\n  iscompleted: false,\n  id: 0\n};\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_TODO') {\n    return _objectSpread({}, state, {\n      id: id++,\n      todos: [].concat(_toConsumableArray(state.todos), [action.todo])\n    });\n  } // if(action.type === 'DEL_TODO'){\n  //     return{\n  //         state.filter(todo => todo)\n  //     }\n  // }\n\n};\n\nvar store = createStore(myReducer);\nvar todoAction = {\n  type: 'ADD_TODO',\n  todo: 'Learn Redux'\n};\nstore.subscribe(function () {\n  console.log('state updated');\n  console.log(store.getState());\n});\nstore.dispatch(todoAction);\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: 'Learn React'\n});\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/sakshya/Desktop/Todo Redux/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","Provider","initState","todos","iscompleted","id","myReducer","state","action","type","todo","store","todoAction","subscribe","console","log","getState","dispatch","render","document","getElementById","unregister"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAG,EADM;AAEdC,EAAAA,WAAW,EAAG,KAFA;AAGdC,EAAAA,EAAE,EAAG;AAHS,CAAlB;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAA6B;AAAA,MAA5BC,KAA4B,uEAApBL,SAAoB;AAAA,MAAVM,MAAU;;AAC3C,MAAGA,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA8B;AAC1B,6BACOF,KADP;AAEIF,MAAAA,EAAE,EAACA,EAAE,EAFT;AAGIF,MAAAA,KAAK,+BAAKI,KAAK,CAACJ,KAAX,IAAiBK,MAAM,CAACE,IAAxB;AAHT;AAKH,GAP0C,CAQ3C;AACA;AACA;AACA;AACA;;AACH,CAbD;;AAeA,IAAMC,KAAK,GAAGX,WAAW,CAACM,SAAD,CAAzB;AAEA,IAAMM,UAAU,GAAG;AAACH,EAAAA,IAAI,EAAE,UAAP;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAAnB;AAEAC,KAAK,CAACE,SAAN,CAAgB,YAAI;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAN,EAAZ;AACH,CAHD;AAKAL,KAAK,CAACM,QAAN,CAAeL,UAAf;AACAD,KAAK,CAACM,QAAN,CAAe;AAACR,EAAAA,IAAI,EAAC,UAAN;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAAf;AAEAb,QAAQ,CAACqB,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAA4DQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D,E,CAEA;AACA;AACA;;AACArB,aAAa,CAACsB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux' ;\nimport { Provider } from 'react-redux';\n\nconst initState = {\n    todos : [],\n    iscompleted : false,\n    id : 0\n}\nconst myReducer = (state = initState,action) =>{\n    if(action.type === 'ADD_TODO'){\n        return{\n            ...state,\n            id:id++,\n            todos:[...state.todos,action.todo]\n        }\n    }\n    // if(action.type === 'DEL_TODO'){\n    //     return{\n    //         state.filter(todo => todo)\n    //     }\n    // }\n}\n\nconst store = createStore(myReducer);\n\nconst todoAction = {type: 'ADD_TODO', todo: 'Learn Redux'}\n\nstore.subscribe(()=>{\n    console.log('state updated');\n    console.log(store.getState());\n})\n\nstore.dispatch(todoAction);\nstore.dispatch({type:'ADD_TODO', todo: 'Learn React'});\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}