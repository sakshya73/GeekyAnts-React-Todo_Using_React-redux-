{"ast":null,"code":"import _toConsumableArray from \"/Users/sakshya/Desktop/Todo Redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createStore } from \"redux\";\nimport Todos from \"../Components/Todos\";\n\nvar myreducer = function myreducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [].concat(_toConsumableArray(state), [{\n        todocaption: action.todocaption,\n        iscompleted: false\n      }]);\n\n    case \"DEL_TODO\":\n      state.splice(action.id, 1);\n      return state;\n\n    case \"EDIT_TODO\":\n      state[action.id].todocaption = action.todocaption;\n      return state;\n\n    case \"CHECK_TODO\":\n      state[action.id].iscompleted = !state[action.id].iscompleted;\n      return state;\n\n    case \"SHOW_ACTIVE\":\n      //   const todos = store.getState().map((todo,i) => {\n      //     return(\n      //         <div key={i}>\n      //             {todo.iscompleted? (<Todos />):(<Todos />) }\n      //         </div>\n      //     )\n      //   });\n      {\n        console.log(\"active clicked\");\n      }\n      break;\n\n    case \"SHOW_COMPLETED\":\n      break;\n\n    case \"SHOW_ALL\":\n      break;\n\n    default:\n      return state;\n  }\n};\n\nvar store = createStore(myreducer);\nexport default store;","map":{"version":3,"sources":["/Users/sakshya/Desktop/Todo Redux/src/Reducers/index.js"],"names":["createStore","Todos","myreducer","state","action","type","todocaption","iscompleted","splice","id","console","log","store"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAuB;AAAA,MAAtBC,KAAsB,uEAAd,EAAc;AAAA,MAAXC,MAAW;;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,0CACKF,KADL,IAEE;AAAEG,QAAAA,WAAW,EAAEF,MAAM,CAACE,WAAtB;AAAmCC,QAAAA,WAAW,EAAE;AAAhD,OAFF;;AAIF,SAAK,UAAL;AACEJ,MAAAA,KAAK,CAACK,MAAN,CAAaJ,MAAM,CAACK,EAApB,EAAwB,CAAxB;AACA,aAAON,KAAP;;AACF,SAAK,WAAL;AACEA,MAAAA,KAAK,CAACC,MAAM,CAACK,EAAR,CAAL,CAAiBH,WAAjB,GAA+BF,MAAM,CAACE,WAAtC;AACA,aAAOH,KAAP;;AACF,SAAK,YAAL;AACAA,MAAAA,KAAK,CAACC,MAAM,CAACK,EAAR,CAAL,CAAiBF,WAAjB,GAA+B,CAACJ,KAAK,CAACC,MAAM,CAACK,EAAR,CAAL,CAAiBF,WAAjD;AACA,aAAOJ,KAAP;;AACA,SAAK,aAAL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AAACO,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAA+B;AAChC;;AACF,SAAK,gBAAL;AACE;;AACF,SAAK,UAAL;AACE;;AACF;AACE,aAAOR,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,IAAMS,KAAK,GAAGZ,WAAW,CAACE,SAAD,CAAzB;AAEA,eAAeU,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport Todos from \"../Components/Todos\"\nconst myreducer = (state = [],action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [\n        ...state,\n        { todocaption: action.todocaption, iscompleted: false }\n      ];\n    case \"DEL_TODO\":\n      state.splice(action.id, 1);\n      return state;\n    case \"EDIT_TODO\":\n      state[action.id].todocaption = action.todocaption;\n      return state;\n    case \"CHECK_TODO\":\n    state[action.id].iscompleted = !state[action.id].iscompleted;\n    return state;\n    case \"SHOW_ACTIVE\":\n    //   const todos = store.getState().map((todo,i) => {\n    //     return(\n    //         <div key={i}>\n    //             {todo.iscompleted? (<Todos />):(<Todos />) }\n    //         </div>\n    //     )\n    //   });\n      {console.log(\"active clicked\");}\n      break;\n    case \"SHOW_COMPLETED\" :\n      break;\n    case \"SHOW_ALL\":\n      break;\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(myreducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}