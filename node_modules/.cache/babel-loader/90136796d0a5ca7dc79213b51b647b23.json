{"ast":null,"code":"import _toConsumableArray from \"/Users/sakshya/Desktop/Todo Redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/sakshya/Desktop/Todo Redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { todoAction } from \"./Actions/actions\";\nvar initState = [];\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_TODO') {\n    return [].concat(_toConsumableArray(state), [{\n      // id : id++,\n      todos: action.todo\n    }]);\n  }\n\n  if (action.type === 'DEL_TODO') {\n    state.splice(2, 1);\n    return {\n      state: state\n    };\n  }\n};\n\nvar store = createStore(myReducer); // const todoAction = {type: 'ADD_TODO', todo: 'Learn Redux'}\n\nstore.subscribe(function () {\n  console.log('state updated');\n  console.log(store.getState());\n});\nstore.dispatch(todoAction()); // store.dispatch(todoAction);\n\nstore.dispatch({\n  type: 'ADD_TODO',\n  todo: 'Learn React'\n});\nstore.dispatch({\n  type: 'DEL_TODO'\n});\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/sakshya/Desktop/Todo Redux/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","Provider","todoAction","initState","myReducer","state","action","type","todos","todo","splice","store","subscribe","console","log","getState","dispatch","render","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AAEA,IAAMC,SAAS,GAAG,EAAlB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAA6B;AAAA,MAA5BC,KAA4B,uEAApBF,SAAoB;AAAA,MAAVG,MAAU;;AAC3C,MAAGA,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA8B;AAC1B,wCAAUF,KAAV,IAAiB;AACb;AACAG,MAAAA,KAAK,EAACF,MAAM,CAACG;AAFA,KAAjB;AAIH;;AACD,MAAGH,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA8B;AAC1BF,IAAAA,KAAK,CAACK,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACA,WAAM;AACHL,MAAAA,KAAK,EAALA;AADG,KAAN;AAGH;AACJ,CAbD;;AAeA,IAAMM,KAAK,GAAGX,WAAW,CAACI,SAAD,CAAzB,C,CAEA;;AAEAO,KAAK,CAACC,SAAN,CAAgB,YAAI;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AACH,CAHD;AAKAJ,KAAK,CAACK,QAAN,CAAed,UAAU,EAAzB,E,CACA;;AACAS,KAAK,CAACK,QAAN,CAAe;AAACT,EAAAA,IAAI,EAAC,UAAN;AAAkBE,EAAAA,IAAI,EAAE;AAAxB,CAAf;AACAE,KAAK,CAACK,QAAN,CAAe;AAACT,EAAAA,IAAI,EAAC;AAAN,CAAf;AAGAV,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAA4DO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D,E,CAEA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux' ;\nimport { Provider } from 'react-redux';\nimport {todoAction} from \"./Actions/actions\"\n\nconst initState = []\nconst myReducer = (state = initState,action) =>{\n    if(action.type === 'ADD_TODO'){\n        return[...state, {\n            // id : id++,\n            todos:action.todo\n        }]\n    }\n    if(action.type === 'DEL_TODO'){\n        state.splice(2, 1);\n        return{\n           state\n        }\n    }\n}\n\nconst store = createStore(myReducer);\n\n// const todoAction = {type: 'ADD_TODO', todo: 'Learn Redux'}\n\nstore.subscribe(()=>{\n    console.log('state updated');\n    console.log(store.getState());\n})\n\nstore.dispatch(todoAction());\n// store.dispatch(todoAction);\nstore.dispatch({type:'ADD_TODO', todo: 'Learn React'});\nstore.dispatch({type:'DEL_TODO'});\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}